#include "basic_transformations_tests.h"

#include "../test_utils.h"
#include "../../utils/basic_transformations.h"

#include <iostream>

namespace
{
uint8_t v[8]={0x1,0x1,0x5,0x1,0x8,0x6,0x7,0x4};

uint8_t M_m_col[10][2][8] = {// [test_no][col][row]
        {{ 0x9A, 0x2B, 0x1E, 0xAC, 0x7C, 0x98, 0xDD, 0x3D },
        {  0x91, 0x4A, 0xCF, 0x17, 0x76, 0xEE, 0x89, 0x1B }},// 0
        {{ 0x81, 0xD1, 0x3F, 0xB2, 0xBF, 0xD1, 0xF7, 0x6F },
        {  0xEA, 0x4B, 0x55, 0x42, 0x75, 0x62, 0xED, 0xE1 }},// 1
        {{ 0x8F, 0xDA, 0x86, 0x33, 0xED, 0x4D, 0x51, 0x39 },
        {  0xBE, 0xA6, 0x3A, 0xB2, 0x8F, 0x6A, 0x9C, 0x7A }},// 2
        {{ 0x24, 0x9A, 0x64, 0x8F, 0xE0, 0xFE, 0x9F, 0x0F },
        {  0xE7, 0x0E, 0x2C, 0x22, 0x71, 0x47, 0x75, 0xDF }},// 3
        {{ 0xFA, 0x64, 0x88, 0x81, 0x65, 0xED, 0x68, 0xAD },
        {  0x42, 0x44, 0xC6, 0x07, 0x31, 0xB1, 0xFA, 0x10 }},// 4
        {{ 0xC5, 0xED, 0x3F, 0xA4, 0x99, 0x64, 0x7C, 0x57 },
        {  0x89, 0xEE, 0x6C, 0xDA, 0x4D, 0x79, 0x90, 0xFE }},// 5
        {{ 0x1D, 0xC3, 0x9F, 0x95, 0xF3, 0x48, 0x6E, 0xE0 },
        {  0x14, 0x6C, 0x93, 0xB7, 0x53, 0x97, 0xE9, 0xF4 }},// 6
        {{ 0x9A, 0xEC, 0x10, 0x45, 0xD7, 0x0D, 0x80, 0x03 },
        {  0xBB, 0xA1, 0x16, 0x4C, 0xC3, 0x8C, 0x35, 0x93 }},// 7
        {{ 0x97, 0x03, 0x80, 0xC8, 0x00, 0x55, 0xE5, 0xE5 },
        {  0x2C, 0x7C, 0xF1, 0x48, 0xB3, 0x9E, 0x90, 0x9A }},// 8
        {{ 0xFF, 0x66, 0x12, 0x01, 0x59, 0x83, 0xC4, 0x53 },
        {  0x03, 0x74, 0xD3, 0x4D, 0x78, 0x9C, 0x58, 0x1D }} // 9
};

uint8_t C_m_col[10][2][8] = {// [test_no][col][row]
        {{ 0x16, 0xCE, 0xDE, 0xE8, 0xD9, 0x99, 0x0F, 0x9E },
        {  0x25, 0xB5, 0x06, 0xF0, 0x42, 0xD3, 0xB3, 0x05 }},// 0
        {{ 0x32, 0xF1, 0x72, 0xC7, 0xE2, 0xD2, 0xE1, 0xC9 },
        {  0x3B, 0x4D, 0x13, 0x95, 0x8F, 0xBC, 0xE2, 0x8D }},// 1
        {{ 0x04, 0x4E, 0x67, 0x25, 0x02, 0xE9, 0x45, 0xD3 },
        {  0x13, 0xF2, 0x41, 0x97, 0x77, 0x3D, 0x45, 0x47 }},// 2
        {{ 0x73, 0xEC, 0x52, 0x1D, 0xA9, 0xBA, 0xF9, 0x77 },
        {  0x7A, 0x44, 0x21, 0x24, 0x56, 0xFE, 0x02, 0x15 }},// 3
        {{ 0x5D, 0xCB, 0xF7, 0xEE, 0x97, 0x65, 0x34, 0x0D },
        {  0x70, 0x0A, 0xB8, 0x6C, 0x7E, 0x3C, 0xFC, 0xBC }},// 4
        {{ 0x9E, 0xDC, 0xE2, 0xCB, 0x1E, 0x77, 0x4F, 0x27 },
        {  0x2D, 0x2C, 0x66, 0x28, 0x14, 0x02, 0xB1, 0x4F }},// 5
        {{ 0x44, 0xB9, 0x0F, 0x55, 0x5C, 0x68, 0x2F, 0x06 },
        {  0x8F, 0xDB, 0x69, 0x18, 0xB7, 0x10, 0x8E, 0xD5 }},// 6
        {{ 0x10, 0x73, 0xFC, 0xB6, 0xEC, 0xF6, 0x8F, 0x31 },
        {  0xBC, 0xB7, 0x7E, 0x75, 0x22, 0x20, 0x16, 0x9C }},// 7
        {{ 0x37, 0x5D, 0xCC, 0x2C, 0x80, 0x0C, 0x45, 0xF6 },
        {  0x1D, 0xD9, 0xC4, 0x71, 0xE5, 0x22, 0xE0, 0xA6 }},// 8
        {{ 0x2A, 0x99, 0x6B, 0xD4, 0xE2, 0xBF, 0xE7, 0x07 },
        {  0xEB, 0xBD, 0xF7, 0x63, 0xCB, 0xFA, 0x64, 0xA5 }} // 9
};
}

void run_m_col_test()
{
    constexpr size_t columns = 2;

    bool failed = false;

    for (auto i = 0; i < 10; ++i)
    {
        uint8_t output[8 * columns];

        m_col(v, &M_m_col[i][0][0], output, 8u, columns);

        if (!compare_data_row((uint64_t*)output, (uint64_t*)&C_m_col[i][0][0], columns))
        {
            failed = true;
        }
    }

    if (failed)
    {
        std::cerr << "m_col_test FAILED!" << std::endl;
    }
    else
    {
        std::cerr << "m_col_test PASSED!" << std::endl;
    }
}
